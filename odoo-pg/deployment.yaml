# postgres/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: odoo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:16
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: odoo
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_PASSWORD
          value: odoo
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
          subPath: postgres-data
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc
---
# postgres/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: odoo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# postgres/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: odoo
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
# odoo/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: odoo-config
  namespace: odoo
data:
  odoo.conf: |
    [options]
    admin_passwd = odoo
    db_host = postgres
    db_port = 5432
    db_user = odoo
    db_password = odoo
    db_name = postgres
    addons_path = /mnt/extra-addons
    data_dir = /var/lib/odoo
    proxy_mode = True
    workers = 2
    max_cron_threads = 1
    limit_memory_hard = 1677721600
    limit_memory_soft = 629145600
    limit_time_cpu = 600
    limit_time_real = 1200
    longpolling_port = 8072
---
# odoo/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: odoo
  namespace: odoo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odoo
  template:
    metadata:
      labels:
        app: odoo
    spec:
      containers:
      - name: odoo
        image: odoo:16.0
        ports:
        - containerPort: 8069
          name: web
        - containerPort: 8072
          name: longpolling
        env:
        - name: HOST
          value: postgres
        - name: USER
          value: odoo
        - name: PASSWORD
          value: odoo
        - name: ADMIN_PASSWORD
          value: odoo
        - name: DB_PASSWORD
          value: odoo
        volumeMounts:
        - name: odoo-data
          mountPath: /var/lib/odoo
        - name: odoo-config
          mountPath: /etc/odoo
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        readinessProbe:
          httpGet:
            path: /web/webclient/version_info
            port: 8069
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: /web/webclient/version_info
            port: 8069
          initialDelaySeconds: 90
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 6
      volumes:
      - name: odoo-data
        persistentVolumeClaim:
          claimName: odoo-pvc
      - name: odoo-config
        configMap:
          name: odoo-config
---
# odoo/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: odoo-ingress
  namespace: odoo
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/websocket-services: "odoo"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - odoo.duciel.cloud
    secretName: odoo-tls
  rules:
  - host: odoo.duciel.cloud
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: odoo
            port:
              number: 8069
      - path: /longpolling
        pathType: Prefix
        backend:
          service:
            name: odoo
            port:
              number: 8072
---
# odoo/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: odoo-pvc
  namespace: odoo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# odoo/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: odoo
  namespace: odoo
spec:
  selector:
    app: odoo
  ports:
  - name: http
    port: 8069
    targetPort: 8069
  - name: longpolling
    port: 8072
    targetPort: 8072
