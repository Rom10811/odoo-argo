apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: odoo-ingress
  namespace: odoo
  annotations:
    # Configuration Nginx Ingress
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
    nginx.ingress.kubernetes.io/proxy-buffers: "8 64k"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    # Configuration Cert-Manager
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # Configuration spécifique à Hetzner
    cert-manager.io/acme-http01-edit-in-place: "true"
    # Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Real-IP $remote_addr;
spec:
  ingressClassName: nginx
  rules:
  - host: odoo.duciel.cloud
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: odoo
            port:
              number: 80
  tls:
  - hosts:
    - odoo.duciel.cloud
    secretName: odoo-tls-secret
